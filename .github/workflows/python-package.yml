# This workflows will build and upload a Python Package using Twine when a release is published
# Conda-forge bot will pick up new PyPI version and automatically create new version
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: python-package

on:
  release:
    types: [published]
  workflow_dispatch: null
# permissions: {}
#   # actions: read
#   # checks: read
#   # contents: read
#   # deployments: read
permissions:
  id-token: write
  contents: read  # Required for actions/checkout

jobs:
  deploy:
    strategy:
      matrix:
        os: ['ubuntu-latest']
        python-version: ["3.10"]
        # List all your packages
        package: ['ag2-core', 'ag2-agents']
    runs-on: ${{ matrix.os }}
    environment: package
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # - name: Install from source
      #   # This is required for the pre-commit tests
      #   shell: pwsh
      #   run: uv pip install --system -e . wheel "setuptools==58.1.0"
      - name: Install dependencies
        shell: pwsh
        run: uv pip install --system -e ./packages/${{ matrix.package }} wheel "setuptools==58.1.0"
      # - name: Conda list
      #   shell: pwsh
      #   run: conda list
      # - name: Build ag2-core
      #   shell: pwsh
      #   run: |
      #     pip install build
      #     python -m build
      - name: Build package
        shell: pwsh
        working-directory: ./packages/${{ matrix.package }}
        run: |
          pip install build
          python -m build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: packages/${{ matrix.package }}/dist/
